%{
Scaling figures
%}

clear;
addpath("../SPIDER_functions")
addpath("D:/GISR-main" + ...
   SINDy/SINDy-PI-master/Comparison/PDE_Comparison/Implicit_SINDy/Functions/");
addpath("SINDy/SINDy-PI-master/Comparison/PDE_Comparison/Implicit_SINDy/TempFunctions/");



seed = 1;
rng(seed);

ns = round( 32*1.1.^(0:30) )
%return

num_trials = 8;

times_add = zeros( numel(ns), num_trials );

times_slow = [];
times_fast = [];

i = 1;
for n = ns
  n
  for trial = 1:num_trials
    A = 2*rand(n,n) - 1;
  %{
  tic
  [cs, residuals] = greedy_regression_pure_matlab_naive( A );
  times_slow = [times_slow, toc];

  tic
  eps = 0;
  [cs, residuals] = greedy_regression_pure_matlab( A, eps );
  times_fast = [times_fast, toc];
  %}

    c0 = zeros(n,1);
    c0([1,3]) = 1;
    max_n = min( [64, n] );
    tic
    [cs, residuals] = greedy_regression_pure_matlab_add( A, c0, max_n );
    times_add(i, trial) =  toc;





  end
  i = i + 1;  
end

save("times2");

%%
load("times2.mat");
load("times.mat");

fs = 12;
lw = 2;
ms = 100;
clf
%plot(ns, times_slow, "linewidth", lw, "color", "black");
%hold on

%average over trials
times_add = mean(times_add, 2);

%restrict data to x-axis we are plotting so the power law fit looks decent
rel = (ns<520) & (ns>120);
ns         = ns(rel);
times_slow = times_slow(rel);
times_add  = times_add(rel);
times_fast = times_fast(rel);


p1 = polyfit( log(ns), log(times_slow), 1 );
p2 = polyfit( log(ns), log(times_fast), 1 );
p3 = polyfit( log(ns), log(times_add),  1 );

plot( ns, exp( p1(1)*log(ns) + p1(2) ), "linewidth", lw, "color","red", "linestyle", "-");
hold on
plot( ns, exp( p2(1)*log(ns) + p2(2) ), "linewidth", lw, "color","red", "linestyle", "-");
plot( ns, exp( p3(1)*log(ns) + p3(2) ), "linewidth", lw, "color","red", "linestyle", "-");

pbaspect([1,2,1]);

scatter( ns, times_slow, ms, 'd', 'filled', 'markerfacecolor', 'black')
scatter( ns, times_fast, ms, 's', 'filled', 'markerfacecolor', 'black')
scatter( ns, times_add,  ms, '^', 'filled', 'markerfacecolor', 'black')
hold off
set( gca, "xscale", "log" );
set( gca, "yscale", "log" );

ylim([1e-1, 2e3]);

xticks([32, 64, 128, 256, 512]);
xlim([120, 530]);
yticks([1e-1, 1e1, 1e3]);

ylabel("walltime (s)", "interpreter", "latex");
xlabel("library size $n$", "interpreter", "latex");
legend({ '','','','Thorough', 'ANUBIS--','ANUBIS+'}, "location", "SouthEast", "interpreter", "latex");
set(gca,"fontsize", fs);

%Now decide how big I want this figure in inches
figure = gcf;
im_size = round([300,500]*2);
figure.Position = [200,200,im_size];
set(gcf, "color", "white");

%Add annotations for the power law scaling
annotation('textarrow',[.4,.4],[.64,.6 ],'String', sprintf("$n^{%0.2f}$", p1(1)), 'Interpreter', 'latex', 'fontsize', fs, 'color', 'red');
annotation('textarrow',[.5,.5],[.48,.44],'String', sprintf("$n^{%0.2f}$", p2(1)), 'Interpreter', 'latex', 'fontsize', fs, 'color', 'red');
annotation('textarrow',[.6,.6],[.39,.35],'String', sprintf("$n^{%0.2f}$", p3(1)), 'Interpreter', 'latex', 'fontsize', fs, 'color', 'red');

exportgraphics( gcf, "figs/scaling.pdf" );

polyfit( log(ns), log(times_slow), 1 )
polyfit( log(ns), log(times_fast), 1 )
polyfit( log(ns), log(times_add),  1 )
polyfit( log(ns(1:end-5)), log(times_add(1:end-5)), 1 )